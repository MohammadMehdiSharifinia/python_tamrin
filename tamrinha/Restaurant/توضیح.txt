در این نسخه ساده:

کلاس‌ها

   `Food`

     اتریبیوت‌ها:

       `name` (نام غذا)
       `category` (ایرانی یا بین‌المللی)
       `days` (لیست روزهای هفته که در آن‌ها پخته می‌شود)
       `stock` (موجودی)
     متدها:

       `set_stock(qty)` برای تعیین موجودی اولیه
       `use_stock(qty)` برای کسر موجودی پس از سفارش
   `Restaurant`

     اتریبیوت‌ها:

       `menu` (دیکشنری نام غذا → شیء `Food`)
       `schedule` (دیکشنری روز هفته → فهرست نام غذاها)
     متدها:

       `add_food(food, qty)`

         غذا را به `menu` اضافه می‌کند، موجودی می‌گذارد و در `schedule` ثبت می‌کند
       `show_menu()`

         کل منو را چاپ می‌کند (دسته‌بندی و روز پخت)
       `today_menu()`

         با استفاده از `datetime.now()` کلید روز جاری را می‌سازد و غذاهای آن روز را برمی‌گرداند
       `order(food_name, qty)`

         اول چک می‌کند غذا در `today_menu()` هست یا نه (در غیر این صورت پیام هشدار می‌دهد)
         سپس موجودی را می‌سنجد و در صورت کافی بودن، `use_stock` را فراخوانی کرده و پیام موفقیت چاپ می‌کند

ارث‌بری
  در این مثال ساده هیچ کلاس فرزندی (subclass) وجود ندارد و همه کلاس‌ها مستقل تعریف شده‌اند.

جریان کار

  1. غذاها با روز پخت و موجودی به `Restaurant` اضافه می‌شوند (`add_food`).
  2. با فراخوانی `today_menu()` فهرست غذاهای امروز به‌دست می‌آید.
  3. متد `order` هم وضعیت قابل سفارش بودن و موجودی را بررسی می‌کند و پیام‌ مناسب را چاپ می‌کند.

این توضیح ساختار کلی کد و نقش هر کلاس، اتریبیوت و متد را تشریح می‌کند—بدون بخش کدنویسی اضافی.
